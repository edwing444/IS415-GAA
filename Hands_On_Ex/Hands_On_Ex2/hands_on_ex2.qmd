---
title: "Hands On Excercise 2"
author: "edwin"
execute: 
  eval: true
  echo: true
  freeze: true
---

# **2  Thematic Mapping and GeoVisualisation with R**

## **2.1 Overview**

In general, thematic mapping involves the use of map symbols to visualize selected properties of geographic features that are not naturally visible, such as population, temperature, crime rate, and property prices, just to mention a few of them.

Geovisualisation, on the other hand, works by providing graphical ideation to render a place, a phenomenon or a process visible, enabling human’s most powerful information-processing abilities – those of spatial cognition associated with our eye–brain vision system – to be directly brought to bear.

In this chapter, you will learn how to plot functional and truthful choropleth maps by using an R package called \*\*tmap\*\* package.

The code chunk below will be used to install and load these packages in RStudio.

```{r}
pacman::p_load(sf, tmap, tidyverse)
mpsz <- st_read(dsn = "C:/edwing444/IS415-GAA/Hands_On_Ex/Hands_On_Ex2/data/geospatial", 
                layer = "MP14_SUBZONE_WEB_PL")
mpsz

popdata <- read_csv("C:/edwing444/IS415-GAA/Hands_On_Ex/Hands_On_Ex2/data/aspatial/respopagesexfa2011to2020.csv")

popdata2020 <- popdata %>%
  filter(Time == 2020) %>%
  group_by(PA, SZ, AG) %>%
  summarise(`POP` = sum(`Pop`)) %>%
  ungroup()%>%
  pivot_wider(names_from=AG, 
              values_from=POP) %>%
  mutate(YOUNG = rowSums(.[3:6])
         ) %>%
  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+
           rowSums(.[15]))%>%
  mutate(`AGED`=rowSums(.[16:21])) %>%
  mutate(`TOTAL`=rowSums(.[3:21])) %>%  
  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)
         /`ECONOMY ACTIVE`) %>%
  select(`PA`, `SZ`, `YOUNG`, 
         `ECONOMY ACTIVE`, `AGED`, 
         `TOTAL`, `DEPENDENCY`)

popdata2020 <- popdata2020 %>%
  mutate_at(.vars = vars(PA, SZ), 
            .funs = list(toupper)) %>%
  filter(`ECONOMY ACTIVE` > 0)
popdata2020 <- popdata2020 %>%
  mutate_at(.vars = vars(PA, SZ), 
            .funs = list(toupper)) %>%
  filter(`ECONOMY ACTIVE` > 0)

mpsz_pop2020 <- left_join(mpsz, popdata2020,
                          by = c("SUBZONE_N" = "SZ"))

tmap_mode("plot")
qtm(mpsz_pop2020, 
    fill = "DEPENDENCY")

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY", 
          style = "quantile", 
          palette = "Blues",
          title = "Dependency ratio") +
  tm_layout(main.title = "Distribution of Dependency Ratio by planning subzone",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and Population data from Department of Statistics DOS", 
             position = c("left", "bottom"))

tm_shape(mpsz_pop2020) +
  tm_polygons()

tm_shape(mpsz_pop2020)+
  tm_polygons("DEPENDENCY")

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY")

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY") +
  tm_borders(lwd = 0.1,  alpha = 1)

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY",
          n = 5,
          style = "quantile") +
  tm_borders(alpha = 0.5)

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY",
          n = 5,
          style = "equal") +
  tm_borders(alpha = 0.5)


summary(mpsz_pop2020$DEPENDENCY)

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY",
          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +
  tm_borders(alpha = 0.5)


tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY",
          n = 6,
          style = "quantile",
          palette = "Blues") +
  tm_borders(alpha = 0.5)

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY",
          style = "quantile",
          palette = "-Greens") +
  tm_borders(alpha = 0.5)

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY", 
          style = "jenks", 
          palette = "Blues", 
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_layout(main.title = "Distribution of Dependency Ratio by planning subzone \n(Jenks classification)",
            main.title.position = "center",
            main.title.size = 1,
            legend.height = 0.45, 
            legend.width = 0.35,
            legend.outside = FALSE,
            legend.position = c("right", "bottom"),
            frame = FALSE) +
  tm_borders(alpha = 0.5)

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY", 
          style = "quantile", 
          palette = "-Greens") +
  tm_borders(alpha = 0.5) +
  tmap_style("classic")

tm_shape(mpsz_pop2020)+
  tm_fill("DEPENDENCY", 
          style = "quantile", 
          palette = "Blues",
          title = "No. of persons") +
  tm_layout(main.title = "Distribution of Dependency Ratio \nby planning subzone",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar(width = 0.15) +
  tm_grid(lwd = 0.1, alpha = 0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and Population data from Department of Statistics DOS", 
             position = c("left", "bottom"))

tmap_style("white")

tm_shape(mpsz_pop2020)+
  tm_fill(c("YOUNG", "AGED"),
          style = "equal", 
          palette = "Blues") +
  tm_layout(legend.position = c("right", "bottom")) +
  tm_borders(alpha = 0.5) +
  tmap_style("white")

tm_shape(mpsz_pop2020)+ 
  tm_polygons(c("DEPENDENCY","AGED"),
              style = c("equal", "quantile"), 
              palette = list("Blues","Greens")) +
  tm_layout(legend.position = c("right", "bottom"))

tm_shape(mpsz_pop2020) +
  tm_fill("DEPENDENCY",
          style = "quantile",
          palette = "Blues",
          thres.poly = 0) + 
  tm_facets(by="REGION_N", 
            free.coords=TRUE, 
            drop.shapes=TRUE) +
  tm_layout(legend.show = FALSE,
            title.position = c("center", "center"), 
            title.size = 20) +
  tm_borders(alpha = 0.5)

youngmap <- tm_shape(mpsz_pop2020)+ 
  tm_polygons("YOUNG", 
              style = "quantile", 
              palette = "Blues")

agedmap <- tm_shape(mpsz_pop2020)+ 
  tm_polygons("AGED", 
              style = "quantile", 
              palette = "Blues")

tmap_arrange(youngmap, agedmap, asp=1, ncol=2)

tm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N=="CENTRAL REGION", ])+
  tm_fill("DEPENDENCY", 
          style = "quantile", 
          palette = "Blues", 
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_layout(legend.outside = TRUE,
            legend.height = 0.45, 
            legend.width = 5.0,
            legend.position = c("right", "bottom"),
            frame = FALSE) +
  tm_borders(alpha = 0.5)
```

### **2.3.4 Data Preparation**

Before a thematic map can be prepared, you are required to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.

-   YOUNG: age group 0 to 4 until age groyup 20 to 24,

-   ECONOMY ACTIVE: age group 25-29 until age group 60-64,

-   AGED: age group 65 and above,

-   TOTAL: all age group, and

-   DEPENDENCY: the ratio between young and aged against economy active group

The original code is

``` r``library(dplyr) ```

`library(tidyr)`

`popdata2020 <- popdata %>%`

`filter(Time == 2020) %>%`

`group_by(PA, SZ, AG) %>%`

`` summarise(`POP` = sum(`Pop`)) %>% ``

`ungroup()%>%`

`pivot_wider(names_from=AG,`

`values_from=POP) %>%`

`mutate(YOUNG = rowSums(.[3:6])`

`+rowSums(.[12])) %>%`

`` mutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+ ``

`rowSums(.[13:15]))%>%`

`` mutate(`AGED`=rowSums(.[16:21])) %>% ``

`` mutate(`TOTAL`=rowSums(.[3:21])) %>% ``

`` mutate(`DEPENDENCY` = (`YOUNG` + `AGED`) ``

`` /`ECONOMY ACTIVE`) %>% ``

`` select(`PA`, `SZ`, `YOUNG`, ``

`` `ECONOMY ACTIVE`, `AGED`, ``

`` `TOTAL`, `DEPENDENCY`) ``

The following take in data for young FROM 0-24 and 50 to 54 which is wrong as rowSums(.\[12\]) is the age group 50 to 54.

Therefore the amended code should be

**mutate(YOUNG = rowSums(.\[3:6\]))**

Furthermore, the orignial code takes in ECONOMY ACTIVE takes in 24-49 and skip 50-54 and takes in 5_to_9 instead which is wrong as ECONOMY ACTIVE 25 to 64

Therefore the amended code is

**mutate(`ECONOMY ACTIVE` = rowSums(.\[7:13\])+ rowSums(.\[15\]))**

Preparing choropleth maps by using similar classification method but with different numbers of classes (i.e. 2, 6, 10, 20). Compare the output maps, what observation can you draw?

\
\
When preparing choropleth maps with different numbers of classes (e.g., 2, 6, 10, 20), you are essentially altering the granularity of the information presented.

1.  **Two Classes**:

    -   **Observation**: The map will be quite simplistic, likely resulting in large areas of the same color. This means that the map will not convey detailed variations within the data; instead, it will show broad categories. This might be useful for high-level overviews but lacks nuance.

2.  **Six Classes**:

    -   **Observation**: The map starts to show more distinctions between different areas. With six classes, you get a better sense of the variability in the data. This level of classification is often useful for intermediate analysis, where some detail is needed but not too much to overwhelm the viewer.

3.  **Ten Classes**:

    -   **Observation**: The map will have even more detailed variations, allowing for finer distinctions between different regions. This can be useful for in-depth analysis and can help to reveal subtler patterns or anomalies in the data.

4.  **Twenty Classes**:

    -   **Observation**: The map will be very detailed, with many different shades or colors. While this provides the most detailed view, it can sometimes be overwhelming or difficult to interpret. It’s crucial to ensure that the map remains readable and that the distinctions between classes are meaningful.
