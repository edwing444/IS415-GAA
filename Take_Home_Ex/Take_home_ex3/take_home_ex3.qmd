---
title: "Take Home Exercise 3"
author: "Edwin Tan"
---

```{r}
pacman::p_load(sf,tmap,tidyverse,spatstat,raster,sparr,spdep,sfdep,spgwr,exactextractr)
```

# Reading data

```{r}
# Import administrative boundary data for vietnam
boundary_data <- st_read(dsn="data/geospatial",
                         layer = "vnm_admbnda_adm1_gov_20201027")
```

```{r}
PCI_2012_data <- read.csv("data/aspatial/2012.csv")
PCI_2013_data <- read.csv("data/aspatial/2013.csv")
PCI_2014_data <- read.csv("data/aspatial/2014.csv")
PCI_2015_data <- read.csv("data/aspatial/2015.csv")
PCI_2016_data <- read.csv("data/aspatial/2016.csv")
PCI_2017_data <- read.csv("data/aspatial/2017.csv")
PCI_2018_data <- read.csv("data/aspatial/2018.csv")
PCI_2019_data <- read.csv("data/aspatial/2019.csv")
PCI_2020_data <- read.csv("data/aspatial/2020.csv")
PCI_2021_data <- read.csv("data/aspatial/2021.csv")
PCI_2022_data <- read.csv("data/aspatial/2022.csv")
```

# Cleaning data

```{r}
boundary_data <- boundary_data %>%
  dplyr::select(-ADM1_VI,-ADM1_REF,-ADM1ALT1EN,-ADM1ALT2EN,-ADM1ALT1VI,-ADM1ALT2EN, -ADM1ALT2VI, -ADM0_VI,-ADM0_EN,-ADM0_PCODE,-date,-validOn,-validTo,-ADM1_PCODE) %>% 
  rename(province = ADM1_EN)

```

::: panel-tabset
## 2012

```{r}
PCI_2012_data <- PCI_2012_data %>%
  dplyr::select(-X,-X.1,-X.2,-X.3,-X.4,-X.5, -X.6, -X.7,-X.8,-X.9,-X.10,-No) %>% 
  rename(province = Province)
```

## 2013

```{r}
PCI_2013_data <- PCI_2013_data %>%
  dplyr::select(-X,-X.1,-X.2,-X.3,-X.4,-X.5, -X.6, -X.7,-X.8,-X.9,-PCI.2013.ranking,-No) %>% 
  rename(province = Province)
```

## 2014

```{r}
PCI_2014_data <- PCI_2014_data %>%
  dplyr::select(-X,-X.1,-X.2,-X.3,-X.4,-X.5, -X.6, -X.7,-X.8,-X.9,-PCI.2014.ranking,-No) %>% 
  rename(province = Province)
```

## 2015

```{r}
PCI_2015_data <- PCI_2015_data %>%
  dplyr::select(-X,-X.1,-X.2,-X.3,-X.4,-X.5, -X.6, -X.7,-X.8,-X.9,-PCI.2015.ranking,-No) %>% 
  rename(province = Province)
```

## 2016

```{r}
PCI_2016_data <- PCI_2016_data %>%
  dplyr::select(-X,-X.1,-X.2,-X.3,-X.4,-X.5, -X.6, -X.7,-X.8,-X.9,-X.10,-X.11,-PCI.2016.ranking,-No) %>% 
  rename(province = Province)
```

## 2017

```{r}
PCI_2017_data <- PCI_2017_data %>%
  dplyr::select(-Rank) %>% 
  rename(province = Province)
```
:::

::: panel-tabset
## 2018

```{r}
PCI_2018_data <- PCI_2018_data %>%
  dplyr::select(-Rank) %>% 
  rename(province = Province)
```

## 2019

```{r}
PCI_2019_data <- PCI_2019_data %>%
  dplyr::select(-Rank) %>% 
  rename(province = Province)
```

## 2020

```{r}
PCI_2020_data <- PCI_2020_data %>%
  rename(province = Province)
```

## 2021

```{r}
PCI_2021_data <- PCI_2021_data %>%
  rename(province = Province)
```

## 2022

```{r}
PCI_2022_data <- PCI_2022_data %>%
  rename(province = Province)
```
:::

# Joining data

::: panel-tabset
## 2012

```{r}
PCI_2012_data <- boundary_data %>%
  left_join(PCI_2012_data, by = "province")

PCI_2012_data <- drop_na(PCI_2012_data)
```

## 2013

```{r}
PCI_2013_data <- boundary_data %>%
  left_join(PCI_2013_data, by = "province")

PCI_2013_data <- drop_na(PCI_2013_data)
```

## 2014

```{r}
PCI_2014_data <- boundary_data %>%
  left_join(PCI_2014_data, by = "province")

PCI_2014_data <- drop_na(PCI_2014_data)
```

## 2015

```{r}
PCI_2015_data <- boundary_data %>%
  left_join(PCI_2015_data, by = "province")

PCI_2015_data <- drop_na(PCI_2015_data)
```

## 2016

```{r}
PCI_2016_data <- boundary_data %>%
  left_join(PCI_2016_data, by = "province")

PCI_2016_data <- drop_na(PCI_2016_data)
```

## 2017

```{r}
PCI_2017_data <- boundary_data %>%
  left_join(PCI_2017_data, by = "province")

PCI_2017_data <- drop_na(PCI_2017_data)
```
:::

::: panel-tabset
## 2018

```{r}
PCI_2018_data <- boundary_data %>%
  left_join(PCI_2018_data, by = "province")

PCI_2018_data <- drop_na(PCI_2018_data)
```

## 2019

```{r}
PCI_2019_data <- boundary_data %>%
  left_join(PCI_2019_data, by = "province")

PCI_2019_data <- drop_na(PCI_2019_data)
```

## 2020

```{r}
PCI_2020_data <- boundary_data %>%
  left_join(PCI_2020_data, by = "province")

PCI_2020_data <- drop_na(PCI_2020_data)
```

## 2021

```{r}
PCI_2021_data <- boundary_data %>%
  left_join(PCI_2021_data, by = "province")

PCI_2021_data <- drop_na(PCI_2021_data)
```

## 2022

```{r}
PCI_2022_data <- boundary_data %>%
  left_join(PCI_2022_data, by = "province")

PCI_2022_data <- drop_na(PCI_2022_data)
```
:::

# Preparing and Computing Data for Global Moran I

::: panel-tabset
## 2012

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2012 <- st_centroid(st_geometry(PCI_2012_data)) # Use centroids of polygons
nb_global_2012 <- poly2nb(PCI_2012_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2012 <- nb2listw(nb_global_2012, style = "W") # Convert to weights list (row-standardized)
```

```{r}
#covert to numeric for PCI 2012
PCI_2012_data$PCI.2012 <- as.numeric(PCI_2012_data$PCI.2012)
# Step 2: Compute Global Moran's I
global_moran_2012 <- moran.test(PCI_2012_data$PCI.2012, lw_global_2012)
# Step 3: Print the results
print(global_moran_2012)
```

## 2013

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2013 <- st_centroid(st_geometry(PCI_2013_data)) # Use centroids of polygons
nb_global_2013 <- poly2nb(PCI_2013_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2013 <- nb2listw(nb_global_2013, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2013_data$PCI.2013 <- as.numeric(PCI_2013_data$PCI.2013)
# Step 2: Compute Global Moran's I
global_moran_2013 <- moran.test(PCI_2013_data$PCI.2013, lw_global_2013)
# Step 3: Print the results
print(global_moran_2013)
```

## 2014

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2014 <- st_centroid(st_geometry(PCI_2014_data)) # Use centroids of polygons
nb_global_2014 <- poly2nb(PCI_2014_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2014 <- nb2listw(nb_global_2014, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2014_data$PCI.2014 <- as.numeric(PCI_2014_data$PCI.2014)
# Step 2: Compute Global Moran's I
global_moran_2014 <- moran.test(PCI_2014_data$PCI.2014, lw_global_2014)
# Step 3: Print the results
print(global_moran_2014)
```

## 2015

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2015 <- st_centroid(st_geometry(PCI_2015_data)) # Use centroids of polygons
nb_global_2015 <- poly2nb(PCI_2015_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2015 <- nb2listw(nb_global_2015, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2015_data$PCI.2015 <- as.numeric(PCI_2015_data$PCI.2015)
# Step 2: Compute Global Moran's I
global_moran_2015 <- moran.test(PCI_2015_data$PCI.2015, lw_global_2015)
# Step 3: Print the results
print(global_moran_2015)
```

## 2016

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2016 <- st_centroid(st_geometry(PCI_2016_data)) # Use centroids of polygons
nb_global_2016 <- poly2nb(PCI_2016_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2016 <- nb2listw(nb_global_2016, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2016_data$PCI.2016 <- as.numeric(PCI_2016_data$PCI.2016)
# Step 2: Compute Global Moran's I
global_moran_2016 <- moran.test(PCI_2016_data$PCI.2016, lw_global_2016)
# Step 3: Print the results
print(global_moran_2016)
```

## 2017

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2017 <- st_centroid(st_geometry(PCI_2017_data)) # Use centroids of polygons
nb_global_2017 <- poly2nb(PCI_2017_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2017 <- nb2listw(nb_global_2017, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2017_data$The.Weighted.PCI.Score.in.2017 <- as.numeric(PCI_2017_data$The.Weighted.PCI.Score.in.2017)
# Step 2: Compute Global Moran's I
global_moran_2017 <- moran.test(PCI_2017_data$The.Weighted.PCI.Score.in.2017, lw_global_2017)
# Step 3: Print the results
print(global_moran_2017)
```
:::

::: panel-tabset
## 2018

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2018 <- st_centroid(st_geometry(PCI_2018_data)) # Use centroids of polygons
nb_global_2018 <- poly2nb(PCI_2018_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2018 <- nb2listw(nb_global_2018, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2018_data$The.Weighted.PCI.Score.in.2018 <- as.numeric(PCI_2018_data$The.Weighted.PCI.Score.in.2018)
# Step 2: Compute Global Moran's I
global_moran_2018 <- moran.test(PCI_2018_data$The.Weighted.PCI.Score.in.2018, lw_global_2018)
# Step 3: Print the results
print(global_moran_2018)
```

## 2019

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2019 <- st_centroid(st_geometry(PCI_2019_data)) # Use centroids of polygons
nb_global_2019 <- poly2nb(PCI_2019_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2019 <- nb2listw(nb_global_2019, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2019_data$The.Weighted.PCI.Score <- as.numeric(PCI_2019_data$The.Weighted.PCI.Score)
# Step 2: Compute Global Moran's I
global_moran_2019 <- moran.test(PCI_2019_data$The.Weighted.PCI.Score, lw_global_2019)
# Step 3: Print the results
print(global_moran_2019)
```

## 2020

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2020 <- st_centroid(st_geometry(PCI_2020_data)) # Use centroids of polygons
nb_global_2020 <- poly2nb(PCI_2020_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2020 <- nb2listw(nb_global_2020, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2020_data$The.Weighted.PCI.Score <- as.numeric(PCI_2020_data$The.Weighted.PCI.Score)
# Step 2: Compute Global Moran's I
global_moran_2020 <- moran.test(PCI_2020_data$The.Weighted.PCI.Score, lw_global_2020)
# Step 3: Print the results
print(global_moran_2020)
```

## 2021

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2021 <- st_centroid(st_geometry(PCI_2021_data)) # Use centroids of polygons
nb_global_2021 <- poly2nb(PCI_2021_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2021 <- nb2listw(nb_global_2021, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2021_data$The.Weighted.PCI.Score <- as.numeric(PCI_2021_data$The.Weighted.PCI.Score)
# Step 2: Compute Global Moran's I
global_moran_2021 <- moran.test(PCI_2021_data$The.Weighted.PCI.Score, lw_global_2021)
# Step 3: Print the results
print(global_moran_2021)
```

## 2022

```{r}
# Step 1: Create spatial weights matrix (Queen Contiguity)
coords_global_2022 <- st_centroid(st_geometry(PCI_2022_data)) # Use centroids of polygons
nb_global_2022 <- poly2nb(PCI_2022_data, queen = TRUE) # Create neighbors list using queen contiguity
lw_global_2022 <- nb2listw(nb_global_2022, style = "W") # Convert to weights list (row-standardized
```

```{r}
#covert to numeric for PCI 2013
PCI_2022_data$The.Weighted.PCI.Score <- as.numeric(PCI_2022_data$The.Weighted.PCI.Score)
# Step 2: Compute Global Moran's I
global_moran_2022 <- moran.test(PCI_2022_data$The.Weighted.PCI.Score, lw_global_2022)
# Step 3: Print the results
print(global_moran_2022)
```
:::

# Preparing Data for LISA

::: panel-tabset
## 2012

```{r}
wm_q_2012 <- PCI_2012_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2012 <- wm_q_2012 %>% 
  mutate(local_moran = local_moran(
    PCI.2012,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2013

```{r}
wm_q_2013 <- PCI_2013_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2013 <- wm_q_2013 %>% 
  mutate(local_moran = local_moran(
    PCI.2013,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2014

```{r}
wm_q_2014 <- PCI_2014_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2014 <- wm_q_2014 %>% 
  mutate(local_moran = local_moran(
    PCI.2014,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2015

```{r}
wm_q_2015 <- PCI_2015_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2015 <- wm_q_2015 %>% 
  mutate(local_moran = local_moran(
    PCI.2015,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2016

```{r}
wm_q_2016 <- PCI_2016_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2016 <- wm_q_2016 %>% 
  mutate(local_moran = local_moran(
    PCI.2016,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2017

```{r}
wm_q_2017 <- PCI_2017_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2017 <- wm_q_2017 %>% 
  mutate(local_moran = local_moran(
    The.Weighted.PCI.Score.in.2017,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```
:::

::: panel-tabset
## 2018

```{r}
wm_q_2018 <- PCI_2018_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2018 <- wm_q_2018 %>% 
  mutate(local_moran = local_moran(
    The.Weighted.PCI.Score.in.2018,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2019

```{r}
wm_q_2019 <- PCI_2019_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2019 <- wm_q_2019 %>% 
  mutate(local_moran = local_moran(
    The.Weighted.PCI.Score,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2020

```{r}
wm_q_2020 <- PCI_2020_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2020 <- wm_q_2020 %>% 
  mutate(local_moran = local_moran(
    The.Weighted.PCI.Score,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2021

```{r}
wm_q_2021 <- PCI_2021_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2021 <- wm_q_2021 %>% 
  mutate(local_moran = local_moran(
    The.Weighted.PCI.Score,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```

## 2022

```{r}
wm_q_2022 <- PCI_2022_data %>% 
  mutate(nb=st_contiguity(geometry),
         wt=st_weights(nb,
                       style="W"),
         .before = 1)
```

```{r}
lisa_2022 <- wm_q_2022 %>% 
  mutate(local_moran = local_moran(
    The.Weighted.PCI.Score,nb,wt,nsim=99),
    .before=1) %>% 
  unnest(local_moran)
```
:::

Below is LISA sdep method

```{r}
# Create a spatial weights matrix
coords <- st_coordinates(st_centroid(PCI_2012_data))
nb <- knn2nb(knearneigh(coords, k = 4)) # K-nearest neighbors
lw <- nb2listw(nb, style = "W")
```

```{r}

# Calculate local Moran's I for each region
local_moran_2012 <- localmoran(PCI_2012_data$PCI.2012, lw)

# Add the results to the data for visualization
PCI_2012_data$local_moran_2012 <- as.numeric(local_moran_2012[, "Ii"])
```

# Visualising LISA

::: panel-tabset
## 2012

```{r}
lisa_sig_2012 <- lisa_2012 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2012)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2012)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2012)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2013

```{r}
lisa_sig_2013 <- lisa_2013 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2013)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2013)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2013)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2014

```{r}
lisa_sig_2014 <- lisa_2014 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2014)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2014)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2014)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2015

```{r}
lisa_sig_2015 <- lisa_2015 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2015)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2015)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2015)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2016

```{r}
lisa_sig_2016 <- lisa_2016 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2016)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2016)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2016)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2017

```{r}
lisa_sig_2017 <- lisa_2017 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2017)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2017)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2017)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```
:::

::: panel-tabset
## 2018

```{r}
lisa_sig_2018 <- lisa_2018 %>% 
  filter(p_ii < 0.05)
```

```{r}
tm_shape(lisa_2018)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2018)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2018)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2019

```{r}
lisa_sig_2019 <- lisa_2019 %>% 
  filter(p_ii < 0.05)
```

```{r}
tm_shape(lisa_2019)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2019)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2019)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2020

```{r}
lisa_sig_2020 <- lisa_2020 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2020)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2020)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2020)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2021

```{r}
lisa_sig_2021 <- lisa_2021 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2021)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2021)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2021)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```

## 2022

```{r}
lisa_sig_2022 <- lisa_2022 %>% 
  filter(p_ii < 0.05)
```

```{r}
 tm_shape(lisa_2022)+
  tm_fill('ii')+
  tm_borders(alpha=0.5)+
  tm_view(set.zoom.limits = c(5,8))+
  tm_layout(
    main.title = "local Moran's I of G",
    main.title.size = 2
  )
```

```{r}
tm_shape(lisa_2022)+
  tm_polygons()+
  tm_borders(alpha=0.5)+
  tm_shape(lisa_sig_2022)+
  tm_fill("mean")+
  tm_borders(alpha=0.4)
```
:::

Below is my sdep lisa cluster

```{r}
# Create the LISA cluster map
tm_shape(PCI_2012_data) +
  tm_polygons("local_moran_2012", 
              title = "Local Moran's I (PCI Clusters)", 
              palette = "RdBu", 
              style = "cont") + 
  tm_layout(main.title = "LISA Cluster Map: PCI", 
            legend.outside = TRUE)
```

```{r}
# Calculate Getis-Ord Gi* statistic for each region
gi_star <- localG(PCI_2012_data$PCI.2012, lw)

# Add Gi* values to the data
PCI_2012_data$gi_star <- as.numeric(gi_star)

# Create a hotspot map
tm_shape(PCI_2012_data) +
  tm_polygons("gi_star", 
              title = "Getis-Ord Gi* (HDI Hotspots)", 
              palette = "YlOrRd", 
              style = "cont") + 
  tm_layout(main.title = "Hotspot Analysis: HDI", 
            legend.outside = TRUE)
```
