{
  "hash": "afdc71ed38221273b4ef8d3204a995b5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 5\"\nauthor: \"edwin\"\ndate: \"September 16,2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## Loading the package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, knitr, tmap, tidyverse,GWmodel)\n```\n:::\n\n\n## Preparing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nhunan<-st_read(dsn = 'data/geospatial',\n               layer='Hunan')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `C:\\edwing444\\IS415-GAA\\In_Class_Excercise\\In_Class_Ex5\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nhunan_2012<-read.csv('data/aspatial/Hunan_2012.csv')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_sf<-left_join(hunan,hunan_2012) %>% \n  select(1:3,7,15,16,31,32)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(County)`\n```\n\n\n:::\n:::\n\n\n### Save Derived data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nwrite_rds(hunan_sf,\"data/rds/hunan_sf.rds\")\n```\n:::\n\n\n### Read Derived data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|echo: false\nhunan_sf<-read_rds(\"data/rds/hunan_sf.rds\")\n```\n:::\n\n\n## Converting to SpatialPolygonDataFrame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_sp<-hunan_sf %>% \n  as_Spatial()\n```\n:::\n\n\n## Geographically Weighted Summary Statistics with adaptive bandwidth\n\n### Determine adaptive bandwidth\n\n::: panel-tabset\n## CV (Cross validation)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_AIC<- bw.gwr(GDPPC ~ 1,\n                data = hunan_sp,\n                approach = \"CV\",\n                adaptive = TRUE,\n                kernel = \"bisquare\",\n                longlat = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth: 62 CV score: 15515442343 \nAdaptive bandwidth: 46 CV score: 14937956887 \nAdaptive bandwidth: 36 CV score: 14408561608 \nAdaptive bandwidth: 29 CV score: 14198527496 \nAdaptive bandwidth: 26 CV score: 13898800611 \nAdaptive bandwidth: 22 CV score: 13662299974 \nAdaptive bandwidth: 22 CV score: 13662299974 \n```\n\n\n:::\n:::\n\n\n## AIC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_AIC<- bw.gwr(GDPPC ~ 1,\n                data = hunan_sp,\n                approach = \"AIC\",\n                adaptive = TRUE,\n                kernel = \"bisquare\",\n                longlat = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth (number of nearest neighbours): 62 AICc value: 1923.156 \nAdaptive bandwidth (number of nearest neighbours): 46 AICc value: 1920.469 \nAdaptive bandwidth (number of nearest neighbours): 36 AICc value: 1917.324 \nAdaptive bandwidth (number of nearest neighbours): 29 AICc value: 1916.661 \nAdaptive bandwidth (number of nearest neighbours): 26 AICc value: 1914.897 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \nAdaptive bandwidth (number of nearest neighbours): 22 AICc value: 1914.045 \n```\n\n\n:::\n:::\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_AIC\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 22\n```\n\n\n:::\n:::\n\n\n### Computing geographically weighted summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwstat<-gwss(data=hunan_sp,\n             vars=\"GDPPC\",\n             bw=bw_AIC,\n             kernel=\"bisquare\",\n             adaptive = TRUE,\n             longlat=T)\n```\n:::\n\n\n### Preparing the output data\n\ncode below is used to extract SDF data table form gwss object output from gwss().It will be converted into data.frame by using as.data.frame()\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwstat_df<-as.data.frame(gwstat$SDF)\n```\n:::\n\n\nNext,cbind() is used to append the newly derived data.frame onto hunan_sf sf data.frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_gstat<-cbind(hunan_sf,gwstat_df)\n```\n:::\n\n\n### Visualising geographically weighted summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(hunan_gstat)+\n  tm_fill(\"GDPPC_LM\",\n          n=5,\n          style=\"quantile\")+\n  tm_borders(alpha=0.5)+\n  tm_layout(main.title=\"Distibution of geoprahically weighted mean\",\n            main.title.position = \"center\",\n            main.title.size = 1.0,\n            legend.text.size = 0.7,\n            legend.height = 1.50,\n            legend.width = 1.50,\n            frame=TRUE)\n```\n\n::: {.cell-output-display}\n![](In_Class_Ex5_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In_Class_Ex5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}