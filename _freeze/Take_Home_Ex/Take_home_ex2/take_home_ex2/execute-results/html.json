{
  "hash": "b24a04e7b9ac5e34aa259b71f3aa31b9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level\"\nauthor: \"edwin\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# Background\n\n### 1. **Geopolitical Context**\n\n-   Thailand's proximity to the **Golden Triangle** (the region where the borders of Thailand, Laos, and Myanmar meet) is significant as this area is historically known as a major hub for drug production and trafficking, particularly of opium and heroin. More recently, synthetic drugs like methamphetamine have become prevalent.\n\n-   Thailand serves both as a **transit route** for drugs destined for third countries and as a significant **market** for illicit drugs. This geopolitical factor adds complexity to the issue, as it intersects with international drug trafficking networks and the nation's domestic drug use.\n\n### 2. **Transportation Infrastructure**\n\n-   With the continuous development of transportation infrastructure in Thailand, the movement of drugs becomes easier both within the country and across borders. This infrastructure facilitates not only legitimate commerce but also illegal activities, particularly in regions that border drug-producing areas.\n\n-   Analysts should consider transportation routes and **connectivity** between provinces, as these might correlate with higher rates of drug abuse or trafficking activity in certain regions.\n\n### 3. **Prevalence of Drug Use**\n\n-   Globally, drug use is on the rise, and Thailand reflects this trend. With **2.7 million youths** reportedly using drugs, and **300,000** needing drug treatment, it’s clear that drug abuse is a pervasive social problem.\n\n-   A particular focus should be placed on **youth involvement**, especially among **vocational-school students**, as they show a higher incidence of drug abuse compared to secondary-school students. Analysts may want to explore why this demographic is more vulnerable and how their environment (e.g., educational settings, social circles) contributes to the problem.\n\n### 4. **Health, Financial, and Social Impact**\n\n-   Drug abuse has severe **health consequences**, including addiction, overdose, and the spread of infectious diseases (e.g., HIV, hepatitis).\n\n-   The **financial cost** includes both the economic burden on healthcare systems and the loss of productivity, particularly among the youth. Social consequences may include increased crime rates, family breakdowns, and reduced educational and employment opportunities for affected individuals.\n\n-   **Social services** and the **healthcare system** in Thailand are likely under strain, with increasing demands for drug treatment and rehabilitation programs.\n\n### 5. **Geographic Distribution of Drug Use**\n\n-   By analyzing the **geographic distribution** of drug use cases across provinces, one can identify patterns that may suggest localized factors contributing to drug abuse. This may include proximity to trafficking routes, socio-economic disparities, or regional differences in enforcement or education.\n\n-   Analysts should be prepared to look at this distribution in relation to **population density**, economic activity, access to healthcare, and law enforcement effectiveness. Yearly data will also allow for the identification of **trends over time**, such as regions where drug abuse is increasing or decreasing.\n\n### 6. **Policy and Enforcement**\n\n-   Thailand has a strong **anti-drug policy**, including harsh penalties for drug-related offenses. However, the effectiveness of these policies is debatable given the continued rise in drug use. An analyst should consider the impact of these policies, including whether they have driven drug abuse underground or led to unintended consequences, such as higher incarceration rates.\n\nIn analyzing this data, it is crucial to contextualize it within **regional geopolitics**, **infrastructure development**, **social factors**, and **government responses**. Mapping drug abuse cases by year and province can help to uncover hotspots, trends, and areas where intervention may be most needed. Understanding the **root causes** of drug abuse among vulnerable populations, particularly youths, is also essential in crafting effective policy recommendations and targeted interventions.\n\n# Installing and loading R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, tmap, tidyverse,sfdep)\n```\n:::\n\n\n-   **sf**: This package is used for handling spatial data in R, allowing for operations on simple features (geometric objects).\n\n-   **spdep**: This package provides tools for spatial dependence, including functions for spatial weights and models.\n\n-   **tmap**: A package designed for thematic mapping, making it easy to create static and interactive maps.\n\n-   **tidyverse**: A collection of R packages designed for data science, including `ggplot2`, `dplyr`, and others that simplify data manipulation and visualization.\n\n-   **sfdep**: This package focuses on spatial dependency, providing tools for estimating spatial autocorrelation and conducting related analyses.\n\n# The data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_data <- read.csv(\"data/thai_drug_offenses_2017_2022.csv\")\n```\n:::\n\n\nread a CSV (Comma-Separated Values) file containing data on drug offenses in Thailand from the years 2017 to 2022. Here’s a breakdown of its components and purpose:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(drug_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  fiscal_year   types_of_drug_offenses    no_cases       province_th       \n Min.   :2017   Length:7392            Min.   :    0.0   Length:7392       \n 1st Qu.:2018   Class :character       1st Qu.:    1.0   Class :character  \n Median :2020   Mode  :character       Median :   70.0   Mode  :character  \n Mean   :2020                          Mean   :  535.3                     \n 3rd Qu.:2021                          3rd Qu.:  623.0                     \n Max.   :2022                          Max.   :17131.0                     \n province_en       \n Length:7392       \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n```\n\n\n:::\n:::\n\n\n-   **Fiscal Year**:\n\n    -   The `fiscal_year` variable ranges from **2017 to 2022**. This indicates that the dataset covers a total of **6 years** of drug offense data.\n\n    -   The median year is **2020**, and the mean year is also **2020**, suggesting that the data is centered around this time period.\n\n-   **Types of Drug Offenses**:\n\n    -   The `types_of_drug_offenses` variable is categorical (character type) and contains a variety of different drug offenses.\n\n    -   The distribution of types may be analyzed further to determine which types of offenses are most common over the years.\n\n-   **Number of Cases (`no_cases`)**:\n\n    -   The `no_cases` variable indicates the number of drug offense cases recorded in the dataset.\n\n    -   **Minimum**: There are instances with **0 cases**, indicating that in some provinces or years, no drug offenses were reported.\n\n    -   **1st Quartile**: The first quartile (25th percentile) shows that **25% of the cases** had **1 or fewer** offenses, indicating low numbers of cases in a substantial portion of the dataset.\n\n    -   **Median**: The median of **70 cases** suggests that half of the entries reported **70 or fewer offenses**, highlighting a significant number of cases in the upper half.\n\n    -   **Mean**: The average number of cases is **535.3**, which is considerably higher than the median, suggesting that there are some provinces or years with exceptionally high numbers of cases that skew the average upwards.\n\n    -   **3rd Quartile**: The third quartile indicates that **75% of the cases** reported **623 or fewer offenses**, reflecting that a smaller portion of the dataset has a much larger number of offenses.\n\n    -   **Maximum**: The maximum number of cases reported is **17,131**, which indicates a significant outlier. This could represent a specific province or year with particularly high drug offenses that may require further investigation.\n\n-   **Province**:\n\n    -   The `province_en` variable, also categorical, lists the provinces in which the drug offenses occurred. The length of this variable being **7392** indicates that there are multiple entries for different provinces and years.\n\n    -   Analysis of this variable could reveal geographic patterns of drug offenses, helping identify regions that are more heavily impacted by drug issues.\n\nOnce the provincial boundaries are loaded into the `thailand_provinces` variable as a Simple Features (sf) object, it can be used for various analyse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_provinces<- st_read(dsn=\"data/geospatial\",\n                         layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\edwing444\\IS415-GAA\\Take_Home_Ex\\Take_home_ex2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Drop the ADM1_TH column\nthailand_provinces <- thailand_provinces %>%\n  select(-ADM1_TH,-ADM1_REF,-ADM1ALT1EN,-ADM1ALT2EN,-ADM1ALT1TH,-ADM1ALT2EN, -ADM1ALT2TH, -ADM0_TH) %>% \n  rename(province_en = ADM1_EN)\n\n# Drop the province_th column\ndrug_data <- drug_data %>%\n  select(-province_th)\n```\n:::\n\n\nI simplify the `thailand_provinces` dataset by removing columns that are not needed for further analysis, thus making the dataset cleaner and more manageable. Also, i rename the `ADM1_EN` column to `province_en`, which contains the province names in English. This provides a clearer and more intuitive column name for future analysis.\\\n\\\nNext, I remove the `province_th` column from the `drug_data` dataset, likely because it contains redundant or unnecessary information, especially if the `thailand_provinces` dataset now includes the relevant province information in English. Dropping this column helps streamline the `drug_data` dataset, focusing on the necessary columns that are crucial for the analysis of drug offenses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_grouped <- drug_data %>%\n  group_by(fiscal_year, province_en)\n\n# Example: Summarize the total drug offenses for each group\nprovince_summary <- province_grouped %>%\n  summarise(total_offenses = sum(no_cases, na.rm = TRUE), .groups = \"keep\")\n```\n:::\n\n\nThis grouping allows for subsequent calculations to be performed within these groups, making it easier to analyze trends and patterns of drug offenses over time and across different provinces.\n\nThe result after summarising is a new data frame `province_summary` that contains three columns: `fiscal_year`, `province_en`, and `total_offenses`, which reflects the total number of offenses recorded for each province in each fiscal year.\n\nThe argument `.groups = \"keep\"` retains the grouping structure of the original data frame in the summarized output, which may be useful for further analysis or visualizations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join the drug abuse data with province polygons\ncombined_data <- thailand_provinces %>%\n  left_join(drug_data, by = \"province_en\")\n```\n:::\n\n\nNow I will merge the two datasets in a way that retains all the rows from the `thailand_provinces` dataset and includes matching rows from the `drug_data` dataset based on the `province_en` column.\n\n-   If a province in `thailand_provinces` does not have corresponding data in `drug_data`, the resulting `combined_data` will still include that province, but the columns from `drug_data` will contain `NA` (missing values).\n\nThe purpose of this operation is to create a combined dataset that integrates geographic information about the provinces with the corresponding drug offense data. This integration is used for mapping the data to **understand how the data looks like**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join the drug abuse province data with province polygons\ncombined_province_data <- thailand_provinces %>%\n  left_join(province_summary)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(province_en)`\n```\n\n\n:::\n:::\n\n\nThe above merges the geographic data of provinces with the summarized drug offense data to create a comprehensive dataset that includes both spatial and analytical information.\n\n-   The join is done based on the common columns present in both datasets. Since `province_summary` is assumed to have the `province_en` column, it will merge the summarized drug offense totals for each province.\n\n-   If there are provinces in `thailand_provinces` that do not have corresponding entries in `province_summary`, they will still be included in the resulting dataset (`combined_province_data`), but the columns from `province_summary` will contain `NA` (missing values).\n\nThis integration is essential for **spatial analysis and for visualizing the data on maps**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_province_data <- combined_province_data %>%\n  filter(!is.na(total_offenses))\n```\n:::\n\n\nNow I clean the dataset by excluding any entries that do not have a valid total number of drug offenses.\n\nRemoving rows with `NA` values in the `total_offenses` column ensures that subsequent analyses or visualizations are based on complete data, leading to more accurate and reliable results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(st_geometry_type(combined_province_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n  [6] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [11] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [16] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [21] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [26] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [31] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [36] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [41] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [46] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [51] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [56] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [61] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [66] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [71] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [76] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [81] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [86] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [91] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n [96] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[101] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[106] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[111] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[116] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[121] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[126] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[131] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[136] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[141] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[146] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[151] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[156] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[161] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[166] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[171] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[176] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[181] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[186] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[191] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[196] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[201] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[206] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[211] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[216] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[221] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[226] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[231] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[236] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[241] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[246] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[251] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[256] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[261] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[266] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[271] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[276] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[281] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[286] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[291] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[296] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[301] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[306] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[311] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[316] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[321] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[326] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[331] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[336] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[341] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[346] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[351] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[356] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[361] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[366] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[371] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[376] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[381] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[386] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[391] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[396] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[401] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[406] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[411] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[416] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[421] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[426] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[431] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[436] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[441] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[446] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE\n```\n\n\n:::\n:::\n\n\nIt is \"MULTIPOLYGON\", it signifies that some provinces may consist of multiple, non-contiguous areas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a choropleth map using tmap\ntm_shape(combined_province_data) +\n  tm_polygons(\"total_offenses\", \n              title = \"Number of Cases\",\n              palette = \"Blues\", \n              style = \"quantile\", \n              n = 5) +\n  tm_facets(by = \"fiscal_year\", nrow = 2, free.coords = FALSE) +\n  tm_layout(main.title = \"Drug Offense Cases in Thailand by Province and Fiscal Year\",\n            main.title.size = 1.5,\n            legend.outside = TRUE)\n```\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**Key Observations:**\n\n1.  **Spatial Distribution:**\n\n    -   **Northern Thailand:** Consistently shows higher rates of drug offenses throughout the depicted years.\n\n    -   **Southern Thailand:** Exhibits a mix of high and low rates, with some provinces experiencing significant spikes in certain years.\n\n    -   **Central Thailand:** Generally has lower rates compared to the north and south, though there are fluctuations.\n\n2.  **Temporal Trends:**\n\n    -   **2017-2019:** A general increase in drug offense cases is observed across most provinces.\n\n    -   **2020:** A slight decrease is seen in some regions, potentially due to COVID-19 restrictions or other factors.\n\n    -   **2021-2022:** Data is missing for 2022, making a complete analysis difficult. However, 2021 shows a continuation of trends from previous years.\n\n3.  **Hotspots:**\n\n    -   **Northern Provinces:** Chiang Mai, Chiang Rai, and Mae Hong Son consistently appear as hotspots with high levels of drug offenses.\n\n    -   **Southern Provinces:** Provinces like Yala, Pattani, and Narathiwat often show elevated rates, particularly in certain years.\n\n**Potential Explanations and Further Analysis:**\n\n-   **Geographical Factors:** Proximity to borders with neighboring countries, especially Myanmar and Laos, could influence drug trafficking routes and hence, higher rates of offenses.\n\n-   **Socioeconomic Conditions:** Poverty, unemployment, and lack of educational opportunities might be contributing factors in regions with high rates.\n\n-   **Governance and Law Enforcement:** The effectiveness of law enforcement agencies and anti-drug initiatives could vary across different regions.\n\n-   **Drug Production and Trafficking:** Understanding the specific types of drugs involved and their production/trafficking routes could provide valuable insights.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example: KDE (if you have point data)\ntm_shape(combined_province_data) +\n  tm_polygons(\"total_offenses\", \n              title = \"Number of Drug Cases\", \n              palette = \"Oranges\", \n              style = \"cont\") +  # Continuous color scale\n  tm_layout(main.title = \"KDE Map of Drug Offense Density\", \n            legend.outside = TRUE)\n```\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n**Key Observations:**\n\n1.  **Spatial Clustering:**\n\n    -   **Northern Thailand:** Exhibits the highest density of drug offenses, with clusters forming in regions like Chiang Mai, Chiang Rai, and Mae Hong Son.\n\n    -   **Southern Thailand:** Also shows significant clustering, particularly in the provinces of Yala, Pattani, and Narathiwat.\n\n    -   **Central Thailand:** Generally has lower densities, with scattered clusters in some areas.\n\n2.  **Density Gradients:**\n\n    -   The map clearly illustrates gradients in drug offense density, with darker shades indicating higher concentrations and lighter shades representing lower concentrations.\n\n    -   These gradients provide a visual representation of the spatial distribution of drug offenses across the country.\n\n**Potential Explanations and Further Analysis:**\n\n-   **Geographical Factors:** Proximity to borders with neighboring countries, such as Myanmar and Laos, could influence drug trafficking routes and contribute to higher densities in those regions.\n\n-   **Socioeconomic Conditions:** Poverty, unemployment, and lack of educational opportunities might be correlated with higher drug offense rates.\n\n-   **Governance and Law Enforcement:** The effectiveness of law enforcement agencies and anti-drug initiatives could vary across different regions, impacting the density of drug offenses.\n\n-   **Drug Production and Trafficking:** Understanding the specific types of drugs involved and their production/trafficking routes could provide valuable insights into the spatial patterns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create neighbors list\nneighbors <- st_contiguity(combined_province_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_t <- poly2nb(thailand_provinces, \n                queen=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(wm_t)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n14 with 1 link\n2 most connected regions:\n29 51 with 9 links\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_t <- nb2listw(wm_t, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_t\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n67\n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1      S2\nW 76 5776 76 36.26113 315.652\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(combined_province_data$total_offenses)  # Check the length of your data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 450\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(neighbors)  # Check the number of units in the spatial weights matrix\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 450\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#moran.test(combined_province_data$total_offenses,listw=neighbors, \n           #zero.policy = TRUE, \n           #na.action=na.omit)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlistw <- nb2listw(neighbors)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(listw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 450 \nNumber of nonzero links: 14130 \nPercentage nonzero weights: 6.977778 \nAverage number of links: 31.4 \n2 disjoint connected subgraphs\nLink number distribution:\n\n  5  11  17  23  29  35  41  47  53  59 \n  6   6  36 108  84  96  66  30   6  12 \n6 least connected regions:\n385 386 387 388 389 390 with 5 links\n12 most connected regions:\n157 158 159 160 161 162 289 290 291 292 293 294 with 59 links\n\nWeights style: W \nWeights constants summary:\n    n     nn  S0       S1       S2\nW 450 202500 450 32.41275 1833.241\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert neighbors list to weights list\nweights_list <- nb2listw(neighbors, style = \"W\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate Moran's I\nmoran_result <- moran.test(combined_province_data$total_offenses, listw)\nprint(moran_result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  combined_province_data$total_offenses  \nweights: listw    \n\nMoran I statistic standard deviate = 16.077, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.1903562142     -0.0022271715      0.0001434901 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_thai_g <- combined_province_data %>% \n  mutate(nb=st_contiguity(geometry),\n         wt=st_weights(nb,\n                       style=\"W\"),\n         .before = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI <- global_moran(wm_thai_g$total_offenses,\n                       wm_thai_g$nb,\n                       wm_thai_g$wt)\nglimpse(moranI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num 0.19\n $ K: num 21.8\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_thai_g$total_offenses,\n                       wm_thai_g$nb,\n                       wm_thai_g$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 16.077, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.1903562142     -0.0022271715      0.0001434901 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_perm(wm_thai_g$total_offenses,\n                       wm_thai_g$nb,\n                       wm_thai_g$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.19036, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Local Moran's I (LISA) calculation\nlocal_moran <- localmoran(combined_province_data$total_offenses, listw)\nhead(local_moran)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Ii          E.Ii      Var.Ii     Z.Ii Pr(z != E(Ii))\n1 3.915244 -0.0980888574 0.884289023 4.267839   1.973754e-05\n2 4.433758 -0.1405926984 1.207737668 4.162394   3.149282e-05\n3 4.036029 -0.1067510040 0.953136961 4.243403   2.201559e-05\n4 2.934944 -0.0468413687 0.446278092 4.463480   8.063904e-06\n5 2.449271 -0.0305306590 0.295856466 4.559071   5.138033e-06\n6 0.363538 -0.0005377416 0.005372184 4.967253   6.790805e-07\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Local Moran's I (LISA) calculation\nlisa <- localmoran(combined_province_data$total_offenses, listw = weights_list)\ncombined_province_data$lisa <- lisa[, \"Ii\"] \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set tmap mode to interactive or static\ntmap_mode(\"plot\")  # Use \"view\" for interactive\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create a thematic map to visualize Local Moran's I\ntm_shape(combined_province_data) +\n  tm_polygons(\"lisa\", palette = \"viridis\", title = \"Local Moran's I (LISA)\") +\n  tm_layout(title = \"Local Moran's I (LISA) for Drug Abuse in Thailand Provinces\")\n```\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- wm_thai_g %>% \n  mutate(local_moran = local_moran(\n    total_offenses,nb,wt,nsim=99),\n    .before=1) %>% \n  unnest(local_moran)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nmap1 <- tm_shape(lisa)+\n  tm_fill('ii')+\n  tm_borders(alpha=0.5)+\n  tm_view(set.zoom.limits = c(5,8))+\n  tm_layout(\n    main.title = \"local Moran's I of G\",\n    main.title.size = 2\n  )\n\nmap2 <- tm_shape(lisa)+\n  tm_fill('p_ii',\n          breaks = c(0,0.001,0.01,0.05,1),\n          labels = c(\"0.001\",\"0.01\",\"0.05\",\"Not Sig\"))+\n  tm_borders(alpha=0.5)+\n  tm_layout(\n    main.title = \"p=value of local Moran's I \",\n    main.title.size = 0.8\n  )\ntmap_arrange(map1,map2,ncol=2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_sig <- lisa %>% \n  filter(p_ii < 0.05)\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(lisa)+\n  tm_polygons()+\n  tm_borders(alpha=0.5)+\n  tm_shape(lisa_sig)+\n  tm_fill(\"mean\")+\n  tm_borders(alpha=0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(combined_province_data$total_offenses, listw=weights_list)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  combined_province_data$total_offenses \nweights: weights_list   \n\nGeary C statistic standard deviate = 3.8101, p-value = 6.945e-05\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.87943531        1.00000000        0.00100129 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nbperm_GC=geary.mc(combined_province_data$total_offenses, \n               listw=weights_list, \n               nsim=999)\nbperm_GC\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  combined_province_data$total_offenses \nweights: weights_list  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.87944, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(bperm_GC$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n```\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nbperm= moran.mc(combined_province_data$total_offenses, \n                listw=weights_list, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  combined_province_data$total_offenses \nweights: weights_list  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.19036, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(bperm$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.002503914\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n```\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince.localMI <- cbind(combined_province_data,local_moran) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(province.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"Ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_thai <- combined_province_data %>% \n  mutate(nb=st_contiguity(geometry),\n         wts = st_inverse_distance(nb,geometry,\n                                   scale=1,\n                                   alpha=1),\n         .before = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wts = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA <- wm_thai %>% \n  mutate(local_Gi = local_gstar_perm(\n    total_offenses,nb,wt,nsim=99),\n    .before=1) %>% \n      unnest(local_Gi)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_sig <- HCSA %>% \n  filter(p_sim<0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(HCSA)+\n  tm_polygons()+\n  tm_borders(alpha=0.5)+\ntm_shape(HCSA_sig)+\n  tm_fill(\"gi_star\")+\n  tm_borders(alpha=0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"gi_star\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](take_home_ex2_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "take_home_ex2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}